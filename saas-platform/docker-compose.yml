version: '3.8'

services:
  # 数据库
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: rust_png_saas
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis缓存
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 前端应用
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_PROCESSOR_URL=http://localhost:8001
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # 后端API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/rust_png_saas
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-jwt-secret
      - AWS_ACCESS_KEY_ID=your-aws-key
      - AWS_SECRET_ACCESS_KEY=your-aws-secret
      - AWS_REGION=us-east-1
      - AWS_S3_BUCKET=rust-png-saas
      - STRIPE_SECRET_KEY=your-stripe-secret
      - SENDGRID_API_KEY=your-sendgrid-key
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules

  # 图片处理服务
  image-processor:
    build:
      context: ./image-processor
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - AWS_ACCESS_KEY_ID=your-aws-key
      - AWS_SECRET_ACCESS_KEY=your-aws-secret
      - AWS_REGION=us-east-1
      - AWS_S3_BUCKET=rust-png-saas
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./image-processor:/app
      - /app/node_modules

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
      - image-processor

volumes:
  postgres_data:
  redis_data:
